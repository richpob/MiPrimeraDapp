{
  "contractName": "IAccessManager",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operationId",
          "type": "bytes32"
        }
      ],
      "name": "AccessManagerAlreadyScheduled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AccessManagerBadConfirmation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operationId",
          "type": "bytes32"
        }
      ],
      "name": "AccessManagerExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialAdmin",
          "type": "address"
        }
      ],
      "name": "AccessManagerInvalidInitialAdmin",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AccessManagerLockedAccount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        }
      ],
      "name": "AccessManagerLockedRole",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operationId",
          "type": "bytes32"
        }
      ],
      "name": "AccessManagerNotReady",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "operationId",
          "type": "bytes32"
        }
      ],
      "name": "AccessManagerNotScheduled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "msgsender",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        }
      ],
      "name": "AccessManagerUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "AccessManagerUnauthorizedCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "msgsender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "AccessManagerUnauthorizedCancel",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AccessManagerUnauthorizedConsume",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "operationId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "nonce",
          "type": "uint32"
        }
      ],
      "name": "OperationCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "operationId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "nonce",
          "type": "uint32"
        }
      ],
      "name": "OperationExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "operationId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "nonce",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "schedule",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "OperationScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "admin",
          "type": "uint64"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "delay",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "since",
          "type": "uint48"
        }
      ],
      "name": "RoleGrantDelayChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "delay",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "since",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "newMember",
          "type": "bool"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "guardian",
          "type": "uint64"
        }
      ],
      "name": "RoleGuardianChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "RoleLabel",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "delay",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "since",
          "type": "uint48"
        }
      ],
      "name": "TargetAdminDelayUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "closed",
          "type": "bool"
        }
      ],
      "name": "TargetClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        }
      ],
      "name": "TargetFunctionRoleUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "canCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "delay",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expiration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minSetback",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "isTargetClosed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "getTargetFunctionRole",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "getTargetAdminDelay",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        }
      ],
      "name": "getRoleGuardian",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        }
      ],
      "name": "getRoleGrantDelay",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccess",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "labelRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "executionDelay",
          "type": "uint32"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "callerConfirmation",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "admin",
          "type": "uint64"
        }
      ],
      "name": "setRoleAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "guardian",
          "type": "uint64"
        }
      ],
      "name": "setRoleGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        },
        {
          "internalType": "uint32",
          "name": "newDelay",
          "type": "uint32"
        }
      ],
      "name": "setGrantDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes4[]",
          "name": "selectors",
          "type": "bytes4[]"
        },
        {
          "internalType": "uint64",
          "name": "roleId",
          "type": "uint64"
        }
      ],
      "name": "setTargetFunctionRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "newDelay",
          "type": "uint32"
        }
      ],
      "name": "setTargetAdminDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "closed",
          "type": "bool"
        }
      ],
      "name": "setTargetClosed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "getSchedule",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint48",
          "name": "when",
          "type": "uint48"
        }
      ],
      "name": "schedule",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "cancel",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "consumeScheduledOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "hashOperation",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "updateAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"}],\"name\":\"AccessManagerAlreadyScheduled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AccessManagerBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"}],\"name\":\"AccessManagerExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"}],\"name\":\"AccessManagerInvalidInitialAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AccessManagerLockedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"AccessManagerLockedRole\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"}],\"name\":\"AccessManagerNotReady\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"}],\"name\":\"AccessManagerNotScheduled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgsender\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"AccessManagerUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"AccessManagerUnauthorizedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgsender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"AccessManagerUnauthorizedCancel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AccessManagerUnauthorizedConsume\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"OperationCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"OperationExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"schedule\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"OperationScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"admin\",\"type\":\"uint64\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"since\",\"type\":\"uint48\"}],\"name\":\"RoleGrantDelayChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"since\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newMember\",\"type\":\"bool\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"guardian\",\"type\":\"uint64\"}],\"name\":\"RoleGuardianChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"name\":\"RoleLabel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"since\",\"type\":\"uint48\"}],\"name\":\"TargetAdminDelayUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"closed\",\"type\":\"bool\"}],\"name\":\"TargetClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"TargetFunctionRoleUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"canCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"consumeScheduledOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expiration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccess\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"getRoleGrantDelay\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"getRoleGuardian\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getSchedule\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"getTargetAdminDelay\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getTargetFunctionRole\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"executionDelay\",\"type\":\"uint32\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"hashOperation\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isTargetClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"name\":\"labelRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minSetback\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint48\",\"name\":\"when\",\"type\":\"uint48\"}],\"name\":\"schedule\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"newDelay\",\"type\":\"uint32\"}],\"name\":\"setGrantDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"admin\",\"type\":\"uint64\"}],\"name\":\"setRoleAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"guardian\",\"type\":\"uint64\"}],\"name\":\"setRoleGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"newDelay\",\"type\":\"uint32\"}],\"name\":\"setTargetAdminDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"closed\",\"type\":\"bool\"}],\"name\":\"setTargetClosed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"},{\"internalType\":\"uint64\",\"name\":\"roleId\",\"type\":\"uint64\"}],\"name\":\"setTargetFunctionRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"updateAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OperationCanceled(bytes32,uint32)\":{\"details\":\"A scheduled operation was canceled.\"},\"OperationExecuted(bytes32,uint32)\":{\"details\":\"A scheduled operation was executed.\"},\"OperationScheduled(bytes32,uint32,uint48,address,address,bytes)\":{\"details\":\"A delayed operation was scheduled.\"},\"RoleAdminChanged(uint64,uint64)\":{\"details\":\"Role acting as admin over a given `roleId` is updated.\"},\"RoleGrantDelayChanged(uint64,uint32,uint48)\":{\"details\":\"Grant delay for a given `roleId` will be updated to `delay` when `since` is reached.\"},\"RoleGranted(uint64,address,uint32,uint48,bool)\":{\"details\":\"Emitted when `account` is granted `roleId`. NOTE: The meaning of the `since` argument depends on the `newMember` argument. If the role is granted to a new member, the `since` argument indicates when the account becomes a member of the role, otherwise it indicates the execution delay for this account and roleId is updated.\"},\"RoleGuardianChanged(uint64,uint64)\":{\"details\":\"Role acting as guardian over a given `roleId` is updated.\"},\"RoleLabel(uint64,string)\":{\"details\":\"Informational labelling for a roleId.\"},\"RoleRevoked(uint64,address)\":{\"details\":\"Emitted when `account` membership or `roleId` is revoked. Unlike granting, revoking is instantaneous.\"},\"TargetAdminDelayUpdated(address,uint32,uint48)\":{\"details\":\"Admin delay for a given `target` will be updated to `delay` when `since` is reached.\"},\"TargetClosed(address,bool)\":{\"details\":\"Target mode is updated (true = closed, false = open).\"},\"TargetFunctionRoleUpdated(address,bytes4,uint64)\":{\"details\":\"Role required to invoke `selector` on `target` is updated to `roleId`.\"}},\"kind\":\"dev\",\"methods\":{\"canCall(address,address,bytes4)\":{\"details\":\"Check if an address (`caller`) is authorised to call a given function on a given contract directly (with no restriction). Additionally, it returns the delay needed to perform the call indirectly through the {schedule} & {execute} workflow. This function is usually called by the targeted contract to control immediate execution of restricted functions. Therefore we only return true if the call can be performed without any delay. If the call is subject to a previously set delay (not zero), then the function should return false and the caller should schedule the operation for future execution. If `immediate` is true, the delay can be disregarded and the operation can be immediately executed, otherwise the operation can be executed if and only if delay is greater than 0. NOTE: The IAuthority interface does not include the `uint32` delay. This is an extension of that interface that is backward compatible. Some contracts may thus ignore the second return argument. In that case they will fail to identify the indirect workflow, and will consider calls that require a delay to be forbidden. NOTE: This function does not report the permissions of this manager itself. These are defined by the {_canCallSelf} function instead.\"},\"cancel(address,address,bytes)\":{\"details\":\"Cancel a scheduled (delayed) operation. Returns the nonce that identifies the previously scheduled operation that is cancelled. Requirements: - the caller must be the proposer, a guardian of the targeted function, or a global admin Emits a {OperationCanceled} event.\"},\"consumeScheduledOp(address,bytes)\":{\"details\":\"Consume a scheduled operation targeting the caller. If such an operation exists, mark it as consumed (emit an {OperationExecuted} event and clean the state). Otherwise, throw an error. This is useful for contract that want to enforce that calls targeting them were scheduled on the manager, with all the verifications that it implies. Emit a {OperationExecuted} event.\"},\"execute(address,bytes)\":{\"details\":\"Execute a function that is delay restricted, provided it was properly scheduled beforehand, or the execution delay is 0. Returns the nonce that identifies the previously scheduled operation that is executed, or 0 if the operation wasn't previously scheduled (if the caller doesn't have an execution delay). Emits an {OperationExecuted} event only if the call was scheduled and delayed.\"},\"expiration()\":{\"details\":\"Expiration delay for scheduled proposals. Defaults to 1 week. IMPORTANT: Avoid overriding the expiration with 0. Otherwise every contract proposal will be expired immediately, disabling any scheduling usage.\"},\"getAccess(uint64,address)\":{\"details\":\"Get the access details for a given account for a given role. These details include the timepoint at which membership becomes active, and the delay applied to all operation by this user that requires this permission level. Returns: [0] Timestamp at which the account membership becomes valid. 0 means role is not granted. [1] Current execution delay for the account. [2] Pending execution delay for the account. [3] Timestamp at which the pending execution delay will become active. 0 means no delay update is scheduled.\"},\"getNonce(bytes32)\":{\"details\":\"Return the nonce for the latest scheduled operation with a given id. Returns 0 if the operation has never been scheduled.\"},\"getRoleAdmin(uint64)\":{\"details\":\"Get the id of the role that acts as an admin for the given role. The admin permission is required to grant the role, revoke the role and update the execution delay to execute an operation that is restricted to this role.\"},\"getRoleGrantDelay(uint64)\":{\"details\":\"Get the role current grant delay. Its value may change at any point without an event emitted following a call to {setGrantDelay}. Changes to this value, including effect timepoint are notified in advance by the {RoleGrantDelayChanged} event.\"},\"getRoleGuardian(uint64)\":{\"details\":\"Get the role that acts as a guardian for a given role. The guardian permission allows canceling operations that have been scheduled under the role.\"},\"getSchedule(bytes32)\":{\"details\":\"Return the timepoint at which a scheduled operation will be ready for execution. This returns 0 if the operation is not yet scheduled, has expired, was executed, or was canceled.\"},\"getTargetAdminDelay(address)\":{\"details\":\"Get the admin delay for a target contract. Changes to contract configuration are subject to this delay.\"},\"getTargetFunctionRole(address,bytes4)\":{\"details\":\"Get the role required to call a function.\"},\"grantRole(uint64,address,uint32)\":{\"details\":\"Add `account` to `roleId`, or change its execution delay. This gives the account the authorization to call any function that is restricted to this role. An optional execution delay (in seconds) can be set. If that delay is non 0, the user is required to schedule any operation that is restricted to members of this role. The user will only be able to execute the operation after the delay has passed, before it has expired. During this period, admin and guardians can cancel the operation (see {cancel}). If the account has already been granted this role, the execution delay will be updated. This update is not immediate and follows the delay rules. For example, if a user currently has a delay of 3 hours, and this is called to reduce that delay to 1 hour, the new delay will take some time to take effect, enforcing that any operation executed in the 3 hours that follows this update was indeed scheduled before this update. Requirements: - the caller must be an admin for the role (see {getRoleAdmin}) - granted role must not be the `PUBLIC_ROLE` Emits a {RoleGranted} event.\"},\"hasRole(uint64,address)\":{\"details\":\"Check if a given account currently has the permission level corresponding to a given role. Note that this permission might be associated with an execution delay. {getAccess} can provide more details.\"},\"hashOperation(address,address,bytes)\":{\"details\":\"Hashing function for delayed operations.\"},\"isTargetClosed(address)\":{\"details\":\"Get whether the contract is closed disabling any access. Otherwise role permissions are applied.\"},\"labelRole(uint64,string)\":{\"details\":\"Give a label to a role, for improved role discoverability by UIs. Requirements: - the caller must be a global admin Emits a {RoleLabel} event.\"},\"minSetback()\":{\"details\":\"Minimum setback for all delay updates, with the exception of execution delays. It can be increased without setback (and reset via {revokeRole} in the case event of an accidental increase). Defaults to 5 days.\"},\"renounceRole(uint64,address)\":{\"details\":\"Renounce role permissions for the calling account with immediate effect. If the sender is not in the role this call has no effect. Requirements: - the caller must be `callerConfirmation`. Emits a {RoleRevoked} event if the account had the role.\"},\"revokeRole(uint64,address)\":{\"details\":\"Remove an account from a role, with immediate effect. If the account does not have the role, this call has no effect. Requirements: - the caller must be an admin for the role (see {getRoleAdmin}) - revoked role must not be the `PUBLIC_ROLE` Emits a {RoleRevoked} event if the account had the role.\"},\"schedule(address,bytes,uint48)\":{\"details\":\"Schedule a delayed operation for future execution, and return the operation identifier. It is possible to choose the timestamp at which the operation becomes executable as long as it satisfies the execution delays required for the caller. The special value zero will automatically set the earliest possible time. Returns the `operationId` that was scheduled. Since this value is a hash of the parameters, it can reoccur when the same parameters are used; if this is relevant, the returned `nonce` can be used to uniquely identify this scheduled operation from other occurrences of the same `operationId` in invocations of {execute} and {cancel}. Emits a {OperationScheduled} event. NOTE: It is not possible to concurrently schedule more than one operation with the same `target` and `data`. If this is necessary, a random byte can be appended to `data` to act as a salt that will be ignored by the target contract if it is using standard Solidity ABI encoding.\"},\"setGrantDelay(uint64,uint32)\":{\"details\":\"Update the delay for granting a `roleId`. Requirements: - the caller must be a global admin Emits a {RoleGrantDelayChanged} event.\"},\"setRoleAdmin(uint64,uint64)\":{\"details\":\"Change admin role for a given role. Requirements: - the caller must be a global admin Emits a {RoleAdminChanged} event\"},\"setRoleGuardian(uint64,uint64)\":{\"details\":\"Change guardian role for a given role. Requirements: - the caller must be a global admin Emits a {RoleGuardianChanged} event\"},\"setTargetAdminDelay(address,uint32)\":{\"details\":\"Set the delay for changing the configuration of a given target contract. Requirements: - the caller must be a global admin Emits a {TargetAdminDelayUpdated} event.\"},\"setTargetClosed(address,bool)\":{\"details\":\"Set the closed flag for a contract. Requirements: - the caller must be a global admin Emits a {TargetClosed} event.\"},\"setTargetFunctionRole(address,bytes4[],uint64)\":{\"details\":\"Set the role required to call functions identified by the `selectors` in the `target` contract. Requirements: - the caller must be a global admin Emits a {TargetFunctionRoleUpdated} event per selector.\"},\"updateAuthority(address,address)\":{\"details\":\"Changes the authority of a target managed by this manager instance. Requirements: - the caller must be a global admin\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/node_modules/@openzeppelin/contracts/access/manager/IAccessManager.sol\":\"IAccessManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/node_modules/@openzeppelin/contracts/access/manager/IAccessManaged.sol\":{\"keccak256\":\"0xaba93d42cd70e1418782951132d97b31ddce5f50ad81090884b6d0e41caac9d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b110886f83e3e98a11255a3b56790322e8d83e513304dde71299406685fc6694\",\"dweb:/ipfs/QmPwroS7MUUk1EmsvaJqU6aarhQ8ewJtJMg7xxmTsaxZEv\"]},\"project:/contracts/node_modules/@openzeppelin/contracts/access/manager/IAccessManager.sol\":{\"keccak256\":\"0xdabf85e3bab52e7cfade4f77e661bcf7a2f9f95097bfd2ca5ddb193a0c21ee8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://402259332090488a587a858ec0113bc7fe55e9dbc6e329927b87ed0f1cce7d08\",\"dweb:/ipfs/QmPJufTJJJifny3JscKTASsPzCrpXRbhtsJnwkCdbaKDTf\"]},\"project:/contracts/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"project:/contracts/node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"project:/contracts/node_modules/@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/manager/IAccessManager.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessManaged} from \"./IAccessManaged.sol\";\nimport {Time} from \"../../utils/types/Time.sol\";\n\ninterface IAccessManager {\n    /**\n     * @dev A delayed operation was scheduled.\n     */\n    event OperationScheduled(\n        bytes32 indexed operationId,\n        uint32 indexed nonce,\n        uint48 schedule,\n        address caller,\n        address target,\n        bytes data\n    );\n\n    /**\n     * @dev A scheduled operation was executed.\n     */\n    event OperationExecuted(bytes32 indexed operationId, uint32 indexed nonce);\n\n    /**\n     * @dev A scheduled operation was canceled.\n     */\n    event OperationCanceled(bytes32 indexed operationId, uint32 indexed nonce);\n\n    /**\n     * @dev Informational labelling for a roleId.\n     */\n    event RoleLabel(uint64 indexed roleId, string label);\n\n    /**\n     * @dev Emitted when `account` is granted `roleId`.\n     *\n     * NOTE: The meaning of the `since` argument depends on the `newMember` argument.\n     * If the role is granted to a new member, the `since` argument indicates when the account becomes a member of the role,\n     * otherwise it indicates the execution delay for this account and roleId is updated.\n     */\n    event RoleGranted(uint64 indexed roleId, address indexed account, uint32 delay, uint48 since, bool newMember);\n\n    /**\n     * @dev Emitted when `account` membership or `roleId` is revoked. Unlike granting, revoking is instantaneous.\n     */\n    event RoleRevoked(uint64 indexed roleId, address indexed account);\n\n    /**\n     * @dev Role acting as admin over a given `roleId` is updated.\n     */\n    event RoleAdminChanged(uint64 indexed roleId, uint64 indexed admin);\n\n    /**\n     * @dev Role acting as guardian over a given `roleId` is updated.\n     */\n    event RoleGuardianChanged(uint64 indexed roleId, uint64 indexed guardian);\n\n    /**\n     * @dev Grant delay for a given `roleId` will be updated to `delay` when `since` is reached.\n     */\n    event RoleGrantDelayChanged(uint64 indexed roleId, uint32 delay, uint48 since);\n\n    /**\n     * @dev Target mode is updated (true = closed, false = open).\n     */\n    event TargetClosed(address indexed target, bool closed);\n\n    /**\n     * @dev Role required to invoke `selector` on `target` is updated to `roleId`.\n     */\n    event TargetFunctionRoleUpdated(address indexed target, bytes4 selector, uint64 indexed roleId);\n\n    /**\n     * @dev Admin delay for a given `target` will be updated to `delay` when `since` is reached.\n     */\n    event TargetAdminDelayUpdated(address indexed target, uint32 delay, uint48 since);\n\n    error AccessManagerAlreadyScheduled(bytes32 operationId);\n    error AccessManagerNotScheduled(bytes32 operationId);\n    error AccessManagerNotReady(bytes32 operationId);\n    error AccessManagerExpired(bytes32 operationId);\n    error AccessManagerLockedAccount(address account);\n    error AccessManagerLockedRole(uint64 roleId);\n    error AccessManagerBadConfirmation();\n    error AccessManagerUnauthorizedAccount(address msgsender, uint64 roleId);\n    error AccessManagerUnauthorizedCall(address caller, address target, bytes4 selector);\n    error AccessManagerUnauthorizedConsume(address target);\n    error AccessManagerUnauthorizedCancel(address msgsender, address caller, address target, bytes4 selector);\n    error AccessManagerInvalidInitialAdmin(address initialAdmin);\n\n    /**\n     * @dev Check if an address (`caller`) is authorised to call a given function on a given contract directly (with\n     * no restriction). Additionally, it returns the delay needed to perform the call indirectly through the {schedule}\n     * & {execute} workflow.\n     *\n     * This function is usually called by the targeted contract to control immediate execution of restricted functions.\n     * Therefore we only return true if the call can be performed without any delay. If the call is subject to a\n     * previously set delay (not zero), then the function should return false and the caller should schedule the operation\n     * for future execution.\n     *\n     * If `immediate` is true, the delay can be disregarded and the operation can be immediately executed, otherwise\n     * the operation can be executed if and only if delay is greater than 0.\n     *\n     * NOTE: The IAuthority interface does not include the `uint32` delay. This is an extension of that interface that\n     * is backward compatible. Some contracts may thus ignore the second return argument. In that case they will fail\n     * to identify the indirect workflow, and will consider calls that require a delay to be forbidden.\n     *\n     * NOTE: This function does not report the permissions of this manager itself. These are defined by the\n     * {_canCallSelf} function instead.\n     */\n    function canCall(\n        address caller,\n        address target,\n        bytes4 selector\n    ) external view returns (bool allowed, uint32 delay);\n\n    /**\n     * @dev Expiration delay for scheduled proposals. Defaults to 1 week.\n     *\n     * IMPORTANT: Avoid overriding the expiration with 0. Otherwise every contract proposal will be expired immediately,\n     * disabling any scheduling usage.\n     */\n    function expiration() external view returns (uint32);\n\n    /**\n     * @dev Minimum setback for all delay updates, with the exception of execution delays. It\n     * can be increased without setback (and reset via {revokeRole} in the case event of an\n     * accidental increase). Defaults to 5 days.\n     */\n    function minSetback() external view returns (uint32);\n\n    /**\n     * @dev Get whether the contract is closed disabling any access. Otherwise role permissions are applied.\n     */\n    function isTargetClosed(address target) external view returns (bool);\n\n    /**\n     * @dev Get the role required to call a function.\n     */\n    function getTargetFunctionRole(address target, bytes4 selector) external view returns (uint64);\n\n    /**\n     * @dev Get the admin delay for a target contract. Changes to contract configuration are subject to this delay.\n     */\n    function getTargetAdminDelay(address target) external view returns (uint32);\n\n    /**\n     * @dev Get the id of the role that acts as an admin for the given role.\n     *\n     * The admin permission is required to grant the role, revoke the role and update the execution delay to execute\n     * an operation that is restricted to this role.\n     */\n    function getRoleAdmin(uint64 roleId) external view returns (uint64);\n\n    /**\n     * @dev Get the role that acts as a guardian for a given role.\n     *\n     * The guardian permission allows canceling operations that have been scheduled under the role.\n     */\n    function getRoleGuardian(uint64 roleId) external view returns (uint64);\n\n    /**\n     * @dev Get the role current grant delay.\n     *\n     * Its value may change at any point without an event emitted following a call to {setGrantDelay}.\n     * Changes to this value, including effect timepoint are notified in advance by the {RoleGrantDelayChanged} event.\n     */\n    function getRoleGrantDelay(uint64 roleId) external view returns (uint32);\n\n    /**\n     * @dev Get the access details for a given account for a given role. These details include the timepoint at which\n     * membership becomes active, and the delay applied to all operation by this user that requires this permission\n     * level.\n     *\n     * Returns:\n     * [0] Timestamp at which the account membership becomes valid. 0 means role is not granted.\n     * [1] Current execution delay for the account.\n     * [2] Pending execution delay for the account.\n     * [3] Timestamp at which the pending execution delay will become active. 0 means no delay update is scheduled.\n     */\n    function getAccess(uint64 roleId, address account) external view returns (uint48, uint32, uint32, uint48);\n\n    /**\n     * @dev Check if a given account currently has the permission level corresponding to a given role. Note that this\n     * permission might be associated with an execution delay. {getAccess} can provide more details.\n     */\n    function hasRole(uint64 roleId, address account) external view returns (bool, uint32);\n\n    /**\n     * @dev Give a label to a role, for improved role discoverability by UIs.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {RoleLabel} event.\n     */\n    function labelRole(uint64 roleId, string calldata label) external;\n\n    /**\n     * @dev Add `account` to `roleId`, or change its execution delay.\n     *\n     * This gives the account the authorization to call any function that is restricted to this role. An optional\n     * execution delay (in seconds) can be set. If that delay is non 0, the user is required to schedule any operation\n     * that is restricted to members of this role. The user will only be able to execute the operation after the delay has\n     * passed, before it has expired. During this period, admin and guardians can cancel the operation (see {cancel}).\n     *\n     * If the account has already been granted this role, the execution delay will be updated. This update is not\n     * immediate and follows the delay rules. For example, if a user currently has a delay of 3 hours, and this is\n     * called to reduce that delay to 1 hour, the new delay will take some time to take effect, enforcing that any\n     * operation executed in the 3 hours that follows this update was indeed scheduled before this update.\n     *\n     * Requirements:\n     *\n     * - the caller must be an admin for the role (see {getRoleAdmin})\n     * - granted role must not be the `PUBLIC_ROLE`\n     *\n     * Emits a {RoleGranted} event.\n     */\n    function grantRole(uint64 roleId, address account, uint32 executionDelay) external;\n\n    /**\n     * @dev Remove an account from a role, with immediate effect. If the account does not have the role, this call has\n     * no effect.\n     *\n     * Requirements:\n     *\n     * - the caller must be an admin for the role (see {getRoleAdmin})\n     * - revoked role must not be the `PUBLIC_ROLE`\n     *\n     * Emits a {RoleRevoked} event if the account had the role.\n     */\n    function revokeRole(uint64 roleId, address account) external;\n\n    /**\n     * @dev Renounce role permissions for the calling account with immediate effect. If the sender is not in\n     * the role this call has no effect.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * Emits a {RoleRevoked} event if the account had the role.\n     */\n    function renounceRole(uint64 roleId, address callerConfirmation) external;\n\n    /**\n     * @dev Change admin role for a given role.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {RoleAdminChanged} event\n     */\n    function setRoleAdmin(uint64 roleId, uint64 admin) external;\n\n    /**\n     * @dev Change guardian role for a given role.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {RoleGuardianChanged} event\n     */\n    function setRoleGuardian(uint64 roleId, uint64 guardian) external;\n\n    /**\n     * @dev Update the delay for granting a `roleId`.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {RoleGrantDelayChanged} event.\n     */\n    function setGrantDelay(uint64 roleId, uint32 newDelay) external;\n\n    /**\n     * @dev Set the role required to call functions identified by the `selectors` in the `target` contract.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {TargetFunctionRoleUpdated} event per selector.\n     */\n    function setTargetFunctionRole(address target, bytes4[] calldata selectors, uint64 roleId) external;\n\n    /**\n     * @dev Set the delay for changing the configuration of a given target contract.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {TargetAdminDelayUpdated} event.\n     */\n    function setTargetAdminDelay(address target, uint32 newDelay) external;\n\n    /**\n     * @dev Set the closed flag for a contract.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     *\n     * Emits a {TargetClosed} event.\n     */\n    function setTargetClosed(address target, bool closed) external;\n\n    /**\n     * @dev Return the timepoint at which a scheduled operation will be ready for execution. This returns 0 if the\n     * operation is not yet scheduled, has expired, was executed, or was canceled.\n     */\n    function getSchedule(bytes32 id) external view returns (uint48);\n\n    /**\n     * @dev Return the nonce for the latest scheduled operation with a given id. Returns 0 if the operation has never\n     * been scheduled.\n     */\n    function getNonce(bytes32 id) external view returns (uint32);\n\n    /**\n     * @dev Schedule a delayed operation for future execution, and return the operation identifier. It is possible to\n     * choose the timestamp at which the operation becomes executable as long as it satisfies the execution delays\n     * required for the caller. The special value zero will automatically set the earliest possible time.\n     *\n     * Returns the `operationId` that was scheduled. Since this value is a hash of the parameters, it can reoccur when\n     * the same parameters are used; if this is relevant, the returned `nonce` can be used to uniquely identify this\n     * scheduled operation from other occurrences of the same `operationId` in invocations of {execute} and {cancel}.\n     *\n     * Emits a {OperationScheduled} event.\n     *\n     * NOTE: It is not possible to concurrently schedule more than one operation with the same `target` and `data`. If\n     * this is necessary, a random byte can be appended to `data` to act as a salt that will be ignored by the target\n     * contract if it is using standard Solidity ABI encoding.\n     */\n    function schedule(address target, bytes calldata data, uint48 when) external returns (bytes32, uint32);\n\n    /**\n     * @dev Execute a function that is delay restricted, provided it was properly scheduled beforehand, or the\n     * execution delay is 0.\n     *\n     * Returns the nonce that identifies the previously scheduled operation that is executed, or 0 if the\n     * operation wasn't previously scheduled (if the caller doesn't have an execution delay).\n     *\n     * Emits an {OperationExecuted} event only if the call was scheduled and delayed.\n     */\n    function execute(address target, bytes calldata data) external payable returns (uint32);\n\n    /**\n     * @dev Cancel a scheduled (delayed) operation. Returns the nonce that identifies the previously scheduled\n     * operation that is cancelled.\n     *\n     * Requirements:\n     *\n     * - the caller must be the proposer, a guardian of the targeted function, or a global admin\n     *\n     * Emits a {OperationCanceled} event.\n     */\n    function cancel(address caller, address target, bytes calldata data) external returns (uint32);\n\n    /**\n     * @dev Consume a scheduled operation targeting the caller. If such an operation exists, mark it as consumed\n     * (emit an {OperationExecuted} event and clean the state). Otherwise, throw an error.\n     *\n     * This is useful for contract that want to enforce that calls targeting them were scheduled on the manager,\n     * with all the verifications that it implies.\n     *\n     * Emit a {OperationExecuted} event.\n     */\n    function consumeScheduledOp(address caller, bytes calldata data) external;\n\n    /**\n     * @dev Hashing function for delayed operations.\n     */\n    function hashOperation(address caller, address target, bytes calldata data) external view returns (bytes32);\n\n    /**\n     * @dev Changes the authority of a target managed by this manager instance.\n     *\n     * Requirements:\n     *\n     * - the caller must be a global admin\n     */\n    function updateAuthority(address target, address newAuthority) external;\n}\n",
  "sourcePath": "/home/ubuntu/Documents/GitHub/MiPrimeraDapp/contracts/node_modules/@openzeppelin/contracts/access/manager/IAccessManager.sol",
  "ast": {
    "absolutePath": "project:/contracts/node_modules/@openzeppelin/contracts/access/manager/IAccessManager.sol",
    "exportedSymbols": {
      "IAccessManaged": [
        7270
      ],
      "IAccessManager": [
        7708
      ],
      "Time": [
        34909
      ]
    },
    "id": 7709,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7272,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "117:24:31"
      },
      {
        "absolutePath": "project:/contracts/node_modules/@openzeppelin/contracts/access/manager/IAccessManaged.sol",
        "file": "./IAccessManaged.sol",
        "id": 7274,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7709,
        "sourceUnit": 7271,
        "src": "143:52:31",
        "symbolAliases": [
          {
            "foreign": {
              "id": 7273,
              "name": "IAccessManaged",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7270,
              "src": "151:14:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/node_modules/@openzeppelin/contracts/utils/types/Time.sol",
        "file": "../../utils/types/Time.sol",
        "id": 7276,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7709,
        "sourceUnit": 34910,
        "src": "196:48:31",
        "symbolAliases": [
          {
            "foreign": {
              "id": 7275,
              "name": "Time",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34909,
              "src": "204:4:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IAccessManager",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 7708,
        "linearizedBaseContracts": [
          7708
        ],
        "name": "IAccessManager",
        "nameLocation": "256:14:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 7277,
              "nodeType": "StructuredDocumentation",
              "src": "277:58:31",
              "text": " @dev A delayed operation was scheduled."
            },
            "eventSelector": "82a2da5dee54ea8021c6545b4444620291e07ee83be6dd57edb175062715f3b4",
            "id": 7291,
            "name": "OperationScheduled",
            "nameLocation": "346:18:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7279,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operationId",
                  "nameLocation": "390:11:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7291,
                  "src": "374:27:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7278,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "374:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7281,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "426:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7291,
                  "src": "411:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7280,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7283,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "schedule",
                  "nameLocation": "448:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7291,
                  "src": "441:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 7282,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7285,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "474:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7291,
                  "src": "466:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7284,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7287,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "498:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7291,
                  "src": "490:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7289,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "520:4:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7291,
                  "src": "514:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7288,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "514:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "364:166:31"
            },
            "src": "340:191:31"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7292,
              "nodeType": "StructuredDocumentation",
              "src": "537:59:31",
              "text": " @dev A scheduled operation was executed."
            },
            "eventSelector": "76a2a46953689d4861a5d3f6ed883ad7e6af674a21f8e162707159fc9dde614d",
            "id": 7298,
            "name": "OperationExecuted",
            "nameLocation": "607:17:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7294,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operationId",
                  "nameLocation": "641:11:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7298,
                  "src": "625:27:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7293,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7296,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "669:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7298,
                  "src": "654:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7295,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "624:51:31"
            },
            "src": "601:75:31"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7299,
              "nodeType": "StructuredDocumentation",
              "src": "682:59:31",
              "text": " @dev A scheduled operation was canceled."
            },
            "eventSelector": "bd9ac67a6e2f6463b80927326310338bcbb4bdb7936ce1365ea3e01067e7b9f7",
            "id": 7305,
            "name": "OperationCanceled",
            "nameLocation": "752:17:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7301,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operationId",
                  "nameLocation": "786:11:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7305,
                  "src": "770:27:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7300,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7303,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "814:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7305,
                  "src": "799:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7302,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "769:51:31"
            },
            "src": "746:75:31"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7306,
              "nodeType": "StructuredDocumentation",
              "src": "827:61:31",
              "text": " @dev Informational labelling for a roleId."
            },
            "eventSelector": "1256f5b5ecb89caec12db449738f2fbcd1ba5806cf38f35413f4e5c15bf6a450",
            "id": 7312,
            "name": "RoleLabel",
            "nameLocation": "899:9:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7308,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "924:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7312,
                  "src": "909:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7307,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "909:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7310,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "label",
                  "nameLocation": "939:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7312,
                  "src": "932:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7309,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "932:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "908:37:31"
            },
            "src": "893:53:31"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7313,
              "nodeType": "StructuredDocumentation",
              "src": "952:375:31",
              "text": " @dev Emitted when `account` is granted `roleId`.\n NOTE: The meaning of the `since` argument depends on the `newMember` argument.\n If the role is granted to a new member, the `since` argument indicates when the account becomes a member of the role,\n otherwise it indicates the execution delay for this account and roleId is updated."
            },
            "eventSelector": "f98448b987f1428e0e230e1f3c6e2ce15b5693eaf31827fbd0b1ec4b424ae7cf",
            "id": 7325,
            "name": "RoleGranted",
            "nameLocation": "1338:11:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7315,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "1365:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7325,
                  "src": "1350:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7314,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1350:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7317,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1389:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7325,
                  "src": "1373:23:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1373:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7319,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "delay",
                  "nameLocation": "1405:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7325,
                  "src": "1398:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7318,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7321,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "since",
                  "nameLocation": "1419:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7325,
                  "src": "1412:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 7320,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "1412:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7323,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newMember",
                  "nameLocation": "1431:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7325,
                  "src": "1426:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7322,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1426:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1349:92:31"
            },
            "src": "1332:110:31"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7326,
              "nodeType": "StructuredDocumentation",
              "src": "1448:125:31",
              "text": " @dev Emitted when `account` membership or `roleId` is revoked. Unlike granting, revoking is instantaneous."
            },
            "eventSelector": "f229baa593af28c41b1d16b748cd7688f0c83aaf92d4be41c44005defe84c166",
            "id": 7332,
            "name": "RoleRevoked",
            "nameLocation": "1584:11:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7328,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "1611:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7332,
                  "src": "1596:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7327,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1596:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7330,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1635:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7332,
                  "src": "1619:23:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1619:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1595:48:31"
            },
            "src": "1578:66:31"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7333,
              "nodeType": "StructuredDocumentation",
              "src": "1650:78:31",
              "text": " @dev Role acting as admin over a given `roleId` is updated."
            },
            "eventSelector": "1fd6dd7631312dfac2205b52913f99de03b4d7e381d5d27d3dbfe0713e6e6340",
            "id": 7339,
            "name": "RoleAdminChanged",
            "nameLocation": "1739:16:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7335,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "1771:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7339,
                  "src": "1756:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7334,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1756:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7337,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "1794:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7339,
                  "src": "1779:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7336,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1779:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1755:45:31"
            },
            "src": "1733:68:31"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7340,
              "nodeType": "StructuredDocumentation",
              "src": "1807:81:31",
              "text": " @dev Role acting as guardian over a given `roleId` is updated."
            },
            "eventSelector": "7a8059630b897b5de4c08ade69f8b90c3ead1f8596d62d10b6c4d14a0afb4ae2",
            "id": 7346,
            "name": "RoleGuardianChanged",
            "nameLocation": "1899:19:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7342,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "1934:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7346,
                  "src": "1919:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7341,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1919:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7344,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "guardian",
                  "nameLocation": "1957:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7346,
                  "src": "1942:23:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7343,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1942:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1918:48:31"
            },
            "src": "1893:74:31"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7347,
              "nodeType": "StructuredDocumentation",
              "src": "1973:108:31",
              "text": " @dev Grant delay for a given `roleId` will be updated to `delay` when `since` is reached."
            },
            "eventSelector": "feb69018ee8b8fd50ea86348f1267d07673379f72cffdeccec63853ee8ce8b48",
            "id": 7355,
            "name": "RoleGrantDelayChanged",
            "nameLocation": "2092:21:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7349,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "2129:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7355,
                  "src": "2114:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7348,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2114:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7351,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "delay",
                  "nameLocation": "2144:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7355,
                  "src": "2137:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7350,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2137:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7353,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "since",
                  "nameLocation": "2158:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7355,
                  "src": "2151:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 7352,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "2151:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2113:51:31"
            },
            "src": "2086:79:31"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7356,
              "nodeType": "StructuredDocumentation",
              "src": "2171:77:31",
              "text": " @dev Target mode is updated (true = closed, false = open)."
            },
            "eventSelector": "90d4e7bb7e5d933792b3562e1741306f8be94837e1348dacef9b6f1df56eb138",
            "id": 7362,
            "name": "TargetClosed",
            "nameLocation": "2259:12:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7358,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "2288:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7362,
                  "src": "2272:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2272:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7360,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "closed",
                  "nameLocation": "2301:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7362,
                  "src": "2296:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7359,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2296:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2271:37:31"
            },
            "src": "2253:56:31"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7363,
              "nodeType": "StructuredDocumentation",
              "src": "2315:94:31",
              "text": " @dev Role required to invoke `selector` on `target` is updated to `roleId`."
            },
            "eventSelector": "9ea6790c7dadfd01c9f8b9762b3682607af2c7e79e05a9f9fdf5580dde949151",
            "id": 7371,
            "name": "TargetFunctionRoleUpdated",
            "nameLocation": "2420:25:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7365,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "2462:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "2446:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2446:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7367,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "selector",
                  "nameLocation": "2477:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "2470:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7366,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2470:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7369,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "2502:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "2487:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7368,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2487:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2445:64:31"
            },
            "src": "2414:96:31"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7372,
              "nodeType": "StructuredDocumentation",
              "src": "2516:108:31",
              "text": " @dev Admin delay for a given `target` will be updated to `delay` when `since` is reached."
            },
            "eventSelector": "a56b76017453f399ec2327ba00375dbfb1fd070ff854341ad6191e6a2e2de19c",
            "id": 7380,
            "name": "TargetAdminDelayUpdated",
            "nameLocation": "2635:23:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7374,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "2675:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7380,
                  "src": "2659:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2659:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7376,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "delay",
                  "nameLocation": "2690:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7380,
                  "src": "2683:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7375,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2683:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7378,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "since",
                  "nameLocation": "2704:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7380,
                  "src": "2697:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 7377,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "2697:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2658:52:31"
            },
            "src": "2629:82:31"
          },
          {
            "errorSelector": "813e9459",
            "id": 7384,
            "name": "AccessManagerAlreadyScheduled",
            "nameLocation": "2723:29:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 7383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7382,
                  "mutability": "mutable",
                  "name": "operationId",
                  "nameLocation": "2761:11:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7384,
                  "src": "2753:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7381,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2753:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2752:21:31"
            },
            "src": "2717:57:31"
          },
          {
            "errorSelector": "60a299b0",
            "id": 7388,
            "name": "AccessManagerNotScheduled",
            "nameLocation": "2785:25:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 7387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7386,
                  "mutability": "mutable",
                  "name": "operationId",
                  "nameLocation": "2819:11:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7388,
                  "src": "2811:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7385,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2811:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2810:21:31"
            },
            "src": "2779:53:31"
          },
          {
            "errorSelector": "18cb6b7a",
            "id": 7392,
            "name": "AccessManagerNotReady",
            "nameLocation": "2843:21:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 7391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7390,
                  "mutability": "mutable",
                  "name": "operationId",
                  "nameLocation": "2873:11:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7392,
                  "src": "2865:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7389,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2865:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2864:21:31"
            },
            "src": "2837:49:31"
          },
          {
            "errorSelector": "78a5d6e4",
            "id": 7396,
            "name": "AccessManagerExpired",
            "nameLocation": "2897:20:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 7395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7394,
                  "mutability": "mutable",
                  "name": "operationId",
                  "nameLocation": "2926:11:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7396,
                  "src": "2918:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7393,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2918:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2917:21:31"
            },
            "src": "2891:48:31"
          },
          {
            "errorSelector": "5a068bc8",
            "id": 7400,
            "name": "AccessManagerLockedAccount",
            "nameLocation": "2950:26:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 7399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7398,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2985:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7400,
                  "src": "2977:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2977:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2976:17:31"
            },
            "src": "2944:50:31"
          },
          {
            "errorSelector": "1871a90c",
            "id": 7404,
            "name": "AccessManagerLockedRole",
            "nameLocation": "3005:23:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 7403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7402,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "3036:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7404,
                  "src": "3029:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7401,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3029:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3028:15:31"
            },
            "src": "2999:45:31"
          },
          {
            "errorSelector": "5f159e63",
            "id": 7406,
            "name": "AccessManagerBadConfirmation",
            "nameLocation": "3055:28:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 7405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3083:2:31"
            },
            "src": "3049:37:31"
          },
          {
            "errorSelector": "f07e038f",
            "id": 7412,
            "name": "AccessManagerUnauthorizedAccount",
            "nameLocation": "3097:32:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 7411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7408,
                  "mutability": "mutable",
                  "name": "msgsender",
                  "nameLocation": "3138:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7412,
                  "src": "3130:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3130:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7410,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "3156:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7412,
                  "src": "3149:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7409,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3149:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3129:34:31"
            },
            "src": "3091:73:31"
          },
          {
            "errorSelector": "81c6f24b",
            "id": 7420,
            "name": "AccessManagerUnauthorizedCall",
            "nameLocation": "3175:29:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 7419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7414,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "3213:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7420,
                  "src": "3205:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3205:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7416,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "3229:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7420,
                  "src": "3221:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3221:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7418,
                  "mutability": "mutable",
                  "name": "selector",
                  "nameLocation": "3244:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7420,
                  "src": "3237:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7417,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3237:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3204:49:31"
            },
            "src": "3169:85:31"
          },
          {
            "errorSelector": "320ff748",
            "id": 7424,
            "name": "AccessManagerUnauthorizedConsume",
            "nameLocation": "3265:32:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 7423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7422,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "3306:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7424,
                  "src": "3298:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3298:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3297:16:31"
            },
            "src": "3259:55:31"
          },
          {
            "errorSelector": "3fe2751c",
            "id": 7434,
            "name": "AccessManagerUnauthorizedCancel",
            "nameLocation": "3325:31:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 7433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7426,
                  "mutability": "mutable",
                  "name": "msgsender",
                  "nameLocation": "3365:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7434,
                  "src": "3357:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3357:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7428,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "3384:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7434,
                  "src": "3376:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7430,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "3400:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7434,
                  "src": "3392:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3392:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7432,
                  "mutability": "mutable",
                  "name": "selector",
                  "nameLocation": "3415:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7434,
                  "src": "3408:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7431,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3408:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3356:68:31"
            },
            "src": "3319:106:31"
          },
          {
            "errorSelector": "0813ada2",
            "id": 7438,
            "name": "AccessManagerInvalidInitialAdmin",
            "nameLocation": "3436:32:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 7437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7436,
                  "mutability": "mutable",
                  "name": "initialAdmin",
                  "nameLocation": "3477:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7438,
                  "src": "3469:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3469:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3468:22:31"
            },
            "src": "3430:61:31"
          },
          {
            "documentation": {
              "id": 7439,
              "nodeType": "StructuredDocumentation",
              "src": "3497:1373:31",
              "text": " @dev Check if an address (`caller`) is authorised to call a given function on a given contract directly (with\n no restriction). Additionally, it returns the delay needed to perform the call indirectly through the {schedule}\n & {execute} workflow.\n This function is usually called by the targeted contract to control immediate execution of restricted functions.\n Therefore we only return true if the call can be performed without any delay. If the call is subject to a\n previously set delay (not zero), then the function should return false and the caller should schedule the operation\n for future execution.\n If `immediate` is true, the delay can be disregarded and the operation can be immediately executed, otherwise\n the operation can be executed if and only if delay is greater than 0.\n NOTE: The IAuthority interface does not include the `uint32` delay. This is an extension of that interface that\n is backward compatible. Some contracts may thus ignore the second return argument. In that case they will fail\n to identify the indirect workflow, and will consider calls that require a delay to be forbidden.\n NOTE: This function does not report the permissions of this manager itself. These are defined by the\n {_canCallSelf} function instead."
            },
            "functionSelector": "b7009613",
            "id": 7452,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "canCall",
            "nameLocation": "4884:7:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7441,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "4909:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7452,
                  "src": "4901:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4901:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7443,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "4933:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7452,
                  "src": "4925:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4925:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7445,
                  "mutability": "mutable",
                  "name": "selector",
                  "nameLocation": "4956:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7452,
                  "src": "4949:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7444,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4949:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4891:79:31"
            },
            "returnParameters": {
              "id": 7451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7448,
                  "mutability": "mutable",
                  "name": "allowed",
                  "nameLocation": "4999:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7452,
                  "src": "4994:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7447,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4994:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7450,
                  "mutability": "mutable",
                  "name": "delay",
                  "nameLocation": "5015:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7452,
                  "src": "5008:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7449,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5008:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4993:28:31"
            },
            "scope": 7708,
            "src": "4875:147:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7453,
              "nodeType": "StructuredDocumentation",
              "src": "5028:252:31",
              "text": " @dev Expiration delay for scheduled proposals. Defaults to 1 week.\n IMPORTANT: Avoid overriding the expiration with 0. Otherwise every contract proposal will be expired immediately,\n disabling any scheduling usage."
            },
            "functionSelector": "4665096d",
            "id": 7458,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "expiration",
            "nameLocation": "5294:10:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5304:2:31"
            },
            "returnParameters": {
              "id": 7457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7456,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7458,
                  "src": "5330:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7455,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5330:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5329:8:31"
            },
            "scope": 7708,
            "src": "5285:53:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7459,
              "nodeType": "StructuredDocumentation",
              "src": "5344:246:31",
              "text": " @dev Minimum setback for all delay updates, with the exception of execution delays. It\n can be increased without setback (and reset via {revokeRole} in the case event of an\n accidental increase). Defaults to 5 days."
            },
            "functionSelector": "cc1b6c81",
            "id": 7464,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "minSetback",
            "nameLocation": "5604:10:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5614:2:31"
            },
            "returnParameters": {
              "id": 7463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7462,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7464,
                  "src": "5640:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7461,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5640:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5639:8:31"
            },
            "scope": 7708,
            "src": "5595:53:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7465,
              "nodeType": "StructuredDocumentation",
              "src": "5654:120:31",
              "text": " @dev Get whether the contract is closed disabling any access. Otherwise role permissions are applied."
            },
            "functionSelector": "a166aa89",
            "id": 7472,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isTargetClosed",
            "nameLocation": "5788:14:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7467,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "5811:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7472,
                  "src": "5803:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5803:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5802:16:31"
            },
            "returnParameters": {
              "id": 7471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7470,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7472,
                  "src": "5842:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7469,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5842:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5841:6:31"
            },
            "scope": 7708,
            "src": "5779:69:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7473,
              "nodeType": "StructuredDocumentation",
              "src": "5854:65:31",
              "text": " @dev Get the role required to call a function."
            },
            "functionSelector": "6d5115bd",
            "id": 7482,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTargetFunctionRole",
            "nameLocation": "5933:21:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7475,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "5963:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7482,
                  "src": "5955:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5955:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7477,
                  "mutability": "mutable",
                  "name": "selector",
                  "nameLocation": "5978:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7482,
                  "src": "5971:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7476,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5971:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5954:33:31"
            },
            "returnParameters": {
              "id": 7481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7480,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7482,
                  "src": "6011:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7479,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6011:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6010:8:31"
            },
            "scope": 7708,
            "src": "5924:95:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7483,
              "nodeType": "StructuredDocumentation",
              "src": "6025:127:31",
              "text": " @dev Get the admin delay for a target contract. Changes to contract configuration are subject to this delay."
            },
            "functionSelector": "4c1da1e2",
            "id": 7490,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTargetAdminDelay",
            "nameLocation": "6166:19:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7485,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "6194:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7490,
                  "src": "6186:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6186:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6185:16:31"
            },
            "returnParameters": {
              "id": 7489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7488,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7490,
                  "src": "6225:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7487,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6225:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6224:8:31"
            },
            "scope": 7708,
            "src": "6157:76:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7491,
              "nodeType": "StructuredDocumentation",
              "src": "6239:265:31",
              "text": " @dev Get the id of the role that acts as an admin for the given role.\n The admin permission is required to grant the role, revoke the role and update the execution delay to execute\n an operation that is restricted to this role."
            },
            "functionSelector": "530dd456",
            "id": 7498,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRoleAdmin",
            "nameLocation": "6518:12:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7493,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "6538:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "6531:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7492,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6531:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6530:15:31"
            },
            "returnParameters": {
              "id": 7497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7496,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "6569:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7495,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6569:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6568:8:31"
            },
            "scope": 7708,
            "src": "6509:68:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7499,
              "nodeType": "StructuredDocumentation",
              "src": "6583:185:31",
              "text": " @dev Get the role that acts as a guardian for a given role.\n The guardian permission allows canceling operations that have been scheduled under the role."
            },
            "functionSelector": "0b0a93ba",
            "id": 7506,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRoleGuardian",
            "nameLocation": "6782:15:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7501,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "6805:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7506,
                  "src": "6798:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7500,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6798:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6797:15:31"
            },
            "returnParameters": {
              "id": 7505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7504,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7506,
                  "src": "6836:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7503,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6836:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6835:8:31"
            },
            "scope": 7708,
            "src": "6773:71:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7507,
              "nodeType": "StructuredDocumentation",
              "src": "6850:286:31",
              "text": " @dev Get the role current grant delay.\n Its value may change at any point without an event emitted following a call to {setGrantDelay}.\n Changes to this value, including effect timepoint are notified in advance by the {RoleGrantDelayChanged} event."
            },
            "functionSelector": "12be8727",
            "id": 7514,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRoleGrantDelay",
            "nameLocation": "7150:17:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7509,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "7175:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "7168:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7508,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7168:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7167:15:31"
            },
            "returnParameters": {
              "id": 7513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7512,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "7206:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7511,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7206:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7205:8:31"
            },
            "scope": 7708,
            "src": "7141:73:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7515,
              "nodeType": "StructuredDocumentation",
              "src": "7220:599:31",
              "text": " @dev Get the access details for a given account for a given role. These details include the timepoint at which\n membership becomes active, and the delay applied to all operation by this user that requires this permission\n level.\n Returns:\n [0] Timestamp at which the account membership becomes valid. 0 means role is not granted.\n [1] Current execution delay for the account.\n [2] Pending execution delay for the account.\n [3] Timestamp at which the pending execution delay will become active. 0 means no delay update is scheduled."
            },
            "functionSelector": "3078f114",
            "id": 7530,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAccess",
            "nameLocation": "7833:9:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7517,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "7850:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7530,
                  "src": "7843:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7516,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7843:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7519,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7866:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7530,
                  "src": "7858:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7858:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7842:32:31"
            },
            "returnParameters": {
              "id": 7529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7522,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7530,
                  "src": "7898:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 7521,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "7898:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7524,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7530,
                  "src": "7906:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7523,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7906:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7526,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7530,
                  "src": "7914:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7525,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7914:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7528,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7530,
                  "src": "7922:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 7527,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "7922:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7897:32:31"
            },
            "scope": 7708,
            "src": "7824:106:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7531,
              "nodeType": "StructuredDocumentation",
              "src": "7936:230:31",
              "text": " @dev Check if a given account currently has the permission level corresponding to a given role. Note that this\n permission might be associated with an execution delay. {getAccess} can provide more details."
            },
            "functionSelector": "d1f856ee",
            "id": 7542,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "hasRole",
            "nameLocation": "8180:7:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7533,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "8195:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7542,
                  "src": "8188:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7532,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "8188:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7535,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8211:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7542,
                  "src": "8203:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8203:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8187:32:31"
            },
            "returnParameters": {
              "id": 7541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7538,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7542,
                  "src": "8243:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7537,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8243:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7540,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7542,
                  "src": "8249:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7539,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8249:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8242:14:31"
            },
            "scope": 7708,
            "src": "8171:86:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7543,
              "nodeType": "StructuredDocumentation",
              "src": "8263:208:31",
              "text": " @dev Give a label to a role, for improved role discoverability by UIs.\n Requirements:\n - the caller must be a global admin\n Emits a {RoleLabel} event."
            },
            "functionSelector": "853551b8",
            "id": 7550,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "labelRole",
            "nameLocation": "8485:9:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7545,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "8502:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7550,
                  "src": "8495:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7544,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "8495:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7547,
                  "mutability": "mutable",
                  "name": "label",
                  "nameLocation": "8526:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7550,
                  "src": "8510:21:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7546,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8510:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8494:38:31"
            },
            "returnParameters": {
              "id": 7549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8541:0:31"
            },
            "scope": 7708,
            "src": "8476:66:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7551,
              "nodeType": "StructuredDocumentation",
              "src": "8548:1222:31",
              "text": " @dev Add `account` to `roleId`, or change its execution delay.\n This gives the account the authorization to call any function that is restricted to this role. An optional\n execution delay (in seconds) can be set. If that delay is non 0, the user is required to schedule any operation\n that is restricted to members of this role. The user will only be able to execute the operation after the delay has\n passed, before it has expired. During this period, admin and guardians can cancel the operation (see {cancel}).\n If the account has already been granted this role, the execution delay will be updated. This update is not\n immediate and follows the delay rules. For example, if a user currently has a delay of 3 hours, and this is\n called to reduce that delay to 1 hour, the new delay will take some time to take effect, enforcing that any\n operation executed in the 3 hours that follows this update was indeed scheduled before this update.\n Requirements:\n - the caller must be an admin for the role (see {getRoleAdmin})\n - granted role must not be the `PUBLIC_ROLE`\n Emits a {RoleGranted} event."
            },
            "functionSelector": "25c471a0",
            "id": 7560,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "grantRole",
            "nameLocation": "9784:9:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7553,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "9801:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7560,
                  "src": "9794:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7552,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "9794:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7555,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9817:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7560,
                  "src": "9809:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9809:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7557,
                  "mutability": "mutable",
                  "name": "executionDelay",
                  "nameLocation": "9833:14:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7560,
                  "src": "9826:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7556,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9826:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9793:55:31"
            },
            "returnParameters": {
              "id": 7559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9857:0:31"
            },
            "scope": 7708,
            "src": "9775:83:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7561,
              "nodeType": "StructuredDocumentation",
              "src": "9864:377:31",
              "text": " @dev Remove an account from a role, with immediate effect. If the account does not have the role, this call has\n no effect.\n Requirements:\n - the caller must be an admin for the role (see {getRoleAdmin})\n - revoked role must not be the `PUBLIC_ROLE`\n Emits a {RoleRevoked} event if the account had the role."
            },
            "functionSelector": "b7d2b162",
            "id": 7568,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revokeRole",
            "nameLocation": "10255:10:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7563,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "10273:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7568,
                  "src": "10266:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7562,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "10266:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7565,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10289:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7568,
                  "src": "10281:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10281:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10265:32:31"
            },
            "returnParameters": {
              "id": 7567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10306:0:31"
            },
            "scope": 7708,
            "src": "10246:61:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7569,
              "nodeType": "StructuredDocumentation",
              "src": "10313:317:31",
              "text": " @dev Renounce role permissions for the calling account with immediate effect. If the sender is not in\n the role this call has no effect.\n Requirements:\n - the caller must be `callerConfirmation`.\n Emits a {RoleRevoked} event if the account had the role."
            },
            "functionSelector": "fe0776f5",
            "id": 7576,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "renounceRole",
            "nameLocation": "10644:12:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7571,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "10664:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7576,
                  "src": "10657:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7570,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "10657:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7573,
                  "mutability": "mutable",
                  "name": "callerConfirmation",
                  "nameLocation": "10680:18:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7576,
                  "src": "10672:26:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10672:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10656:43:31"
            },
            "returnParameters": {
              "id": 7575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10708:0:31"
            },
            "scope": 7708,
            "src": "10635:74:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7577,
              "nodeType": "StructuredDocumentation",
              "src": "10715:184:31",
              "text": " @dev Change admin role for a given role.\n Requirements:\n - the caller must be a global admin\n Emits a {RoleAdminChanged} event"
            },
            "functionSelector": "30cae187",
            "id": 7584,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setRoleAdmin",
            "nameLocation": "10913:12:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7579,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "10933:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7584,
                  "src": "10926:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7578,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "10926:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7581,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "10948:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7584,
                  "src": "10941:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7580,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "10941:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10925:29:31"
            },
            "returnParameters": {
              "id": 7583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10963:0:31"
            },
            "scope": 7708,
            "src": "10904:60:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7585,
              "nodeType": "StructuredDocumentation",
              "src": "10970:190:31",
              "text": " @dev Change guardian role for a given role.\n Requirements:\n - the caller must be a global admin\n Emits a {RoleGuardianChanged} event"
            },
            "functionSelector": "52962952",
            "id": 7592,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setRoleGuardian",
            "nameLocation": "11174:15:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7587,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "11197:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7592,
                  "src": "11190:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7586,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "11190:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7589,
                  "mutability": "mutable",
                  "name": "guardian",
                  "nameLocation": "11212:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7592,
                  "src": "11205:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7588,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "11205:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11189:32:31"
            },
            "returnParameters": {
              "id": 7591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11230:0:31"
            },
            "scope": 7708,
            "src": "11165:66:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7593,
              "nodeType": "StructuredDocumentation",
              "src": "11237:196:31",
              "text": " @dev Update the delay for granting a `roleId`.\n Requirements:\n - the caller must be a global admin\n Emits a {RoleGrantDelayChanged} event."
            },
            "functionSelector": "a64d95ce",
            "id": 7600,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setGrantDelay",
            "nameLocation": "11447:13:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7595,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "11468:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7600,
                  "src": "11461:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7594,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "11461:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7597,
                  "mutability": "mutable",
                  "name": "newDelay",
                  "nameLocation": "11483:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7600,
                  "src": "11476:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7596,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11476:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11460:32:31"
            },
            "returnParameters": {
              "id": 7599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11501:0:31"
            },
            "scope": 7708,
            "src": "11438:64:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7601,
              "nodeType": "StructuredDocumentation",
              "src": "11508:267:31",
              "text": " @dev Set the role required to call functions identified by the `selectors` in the `target` contract.\n Requirements:\n - the caller must be a global admin\n Emits a {TargetFunctionRoleUpdated} event per selector."
            },
            "functionSelector": "08d6122d",
            "id": 7611,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setTargetFunctionRole",
            "nameLocation": "11789:21:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7603,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "11819:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7611,
                  "src": "11811:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11811:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7606,
                  "mutability": "mutable",
                  "name": "selectors",
                  "nameLocation": "11845:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7611,
                  "src": "11827:27:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes4_$dyn_calldata_ptr",
                    "typeString": "bytes4[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7604,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "11827:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 7605,
                    "nodeType": "ArrayTypeName",
                    "src": "11827:8:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                      "typeString": "bytes4[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7608,
                  "mutability": "mutable",
                  "name": "roleId",
                  "nameLocation": "11863:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7611,
                  "src": "11856:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 7607,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "11856:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11810:60:31"
            },
            "returnParameters": {
              "id": 7610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11879:0:31"
            },
            "scope": 7708,
            "src": "11780:100:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7612,
              "nodeType": "StructuredDocumentation",
              "src": "11886:229:31",
              "text": " @dev Set the delay for changing the configuration of a given target contract.\n Requirements:\n - the caller must be a global admin\n Emits a {TargetAdminDelayUpdated} event."
            },
            "functionSelector": "d22b5989",
            "id": 7619,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setTargetAdminDelay",
            "nameLocation": "12129:19:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7614,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "12157:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7619,
                  "src": "12149:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12149:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7616,
                  "mutability": "mutable",
                  "name": "newDelay",
                  "nameLocation": "12172:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7619,
                  "src": "12165:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7615,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12165:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12148:33:31"
            },
            "returnParameters": {
              "id": 7618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12190:0:31"
            },
            "scope": 7708,
            "src": "12120:71:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7620,
              "nodeType": "StructuredDocumentation",
              "src": "12197:181:31",
              "text": " @dev Set the closed flag for a contract.\n Requirements:\n - the caller must be a global admin\n Emits a {TargetClosed} event."
            },
            "functionSelector": "167bd395",
            "id": 7627,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setTargetClosed",
            "nameLocation": "12392:15:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7622,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "12416:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7627,
                  "src": "12408:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12408:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7624,
                  "mutability": "mutable",
                  "name": "closed",
                  "nameLocation": "12429:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7627,
                  "src": "12424:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7623,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12424:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12407:29:31"
            },
            "returnParameters": {
              "id": 7626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12445:0:31"
            },
            "scope": 7708,
            "src": "12383:63:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7628,
              "nodeType": "StructuredDocumentation",
              "src": "12452:209:31",
              "text": " @dev Return the timepoint at which a scheduled operation will be ready for execution. This returns 0 if the\n operation is not yet scheduled, has expired, was executed, or was canceled."
            },
            "functionSelector": "3adc277a",
            "id": 7635,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSchedule",
            "nameLocation": "12675:11:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7630,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "12695:2:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7635,
                  "src": "12687:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7629,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12687:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12686:12:31"
            },
            "returnParameters": {
              "id": 7634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7633,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7635,
                  "src": "12722:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 7632,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "12722:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12721:8:31"
            },
            "scope": 7708,
            "src": "12666:64:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7636,
              "nodeType": "StructuredDocumentation",
              "src": "12736:152:31",
              "text": " @dev Return the nonce for the latest scheduled operation with a given id. Returns 0 if the operation has never\n been scheduled."
            },
            "functionSelector": "4136a33c",
            "id": 7643,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getNonce",
            "nameLocation": "12902:8:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7638,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "12919:2:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7643,
                  "src": "12911:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7637,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12911:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12910:12:31"
            },
            "returnParameters": {
              "id": 7642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7641,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7643,
                  "src": "12946:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7640,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12946:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12945:8:31"
            },
            "scope": 7708,
            "src": "12893:61:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7644,
              "nodeType": "StructuredDocumentation",
              "src": "12960:1068:31",
              "text": " @dev Schedule a delayed operation for future execution, and return the operation identifier. It is possible to\n choose the timestamp at which the operation becomes executable as long as it satisfies the execution delays\n required for the caller. The special value zero will automatically set the earliest possible time.\n Returns the `operationId` that was scheduled. Since this value is a hash of the parameters, it can reoccur when\n the same parameters are used; if this is relevant, the returned `nonce` can be used to uniquely identify this\n scheduled operation from other occurrences of the same `operationId` in invocations of {execute} and {cancel}.\n Emits a {OperationScheduled} event.\n NOTE: It is not possible to concurrently schedule more than one operation with the same `target` and `data`. If\n this is necessary, a random byte can be appended to `data` to act as a salt that will be ignored by the target\n contract if it is using standard Solidity ABI encoding."
            },
            "functionSelector": "f801a698",
            "id": 7657,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "schedule",
            "nameLocation": "14042:8:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7646,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "14059:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7657,
                  "src": "14051:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14051:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7648,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "14082:4:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7657,
                  "src": "14067:19:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7647,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14067:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7650,
                  "mutability": "mutable",
                  "name": "when",
                  "nameLocation": "14095:4:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7657,
                  "src": "14088:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 7649,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "14088:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14050:50:31"
            },
            "returnParameters": {
              "id": 7656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7653,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7657,
                  "src": "14119:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7652,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14119:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7655,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7657,
                  "src": "14128:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7654,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14128:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14118:17:31"
            },
            "scope": 7708,
            "src": "14033:103:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7658,
              "nodeType": "StructuredDocumentation",
              "src": "14142:451:31",
              "text": " @dev Execute a function that is delay restricted, provided it was properly scheduled beforehand, or the\n execution delay is 0.\n Returns the nonce that identifies the previously scheduled operation that is executed, or 0 if the\n operation wasn't previously scheduled (if the caller doesn't have an execution delay).\n Emits an {OperationExecuted} event only if the call was scheduled and delayed."
            },
            "functionSelector": "1cff79cd",
            "id": 7667,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "14607:7:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7660,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "14623:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7667,
                  "src": "14615:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14615:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7662,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "14646:4:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7667,
                  "src": "14631:19:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7661,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14631:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14614:37:31"
            },
            "returnParameters": {
              "id": 7666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7665,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7667,
                  "src": "14678:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7664,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14678:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14677:8:31"
            },
            "scope": 7708,
            "src": "14598:88:31",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7668,
              "nodeType": "StructuredDocumentation",
              "src": "14692:339:31",
              "text": " @dev Cancel a scheduled (delayed) operation. Returns the nonce that identifies the previously scheduled\n operation that is cancelled.\n Requirements:\n - the caller must be the proposer, a guardian of the targeted function, or a global admin\n Emits a {OperationCanceled} event."
            },
            "functionSelector": "d6bb62c6",
            "id": 7679,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cancel",
            "nameLocation": "15045:6:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7670,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "15060:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7679,
                  "src": "15052:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15052:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7672,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "15076:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7679,
                  "src": "15068:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7671,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15068:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7674,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "15099:4:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7679,
                  "src": "15084:19:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7673,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15084:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15051:53:31"
            },
            "returnParameters": {
              "id": 7678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7677,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7679,
                  "src": "15123:6:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7676,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15123:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15122:8:31"
            },
            "scope": 7708,
            "src": "15036:95:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7680,
              "nodeType": "StructuredDocumentation",
              "src": "15137:434:31",
              "text": " @dev Consume a scheduled operation targeting the caller. If such an operation exists, mark it as consumed\n (emit an {OperationExecuted} event and clean the state). Otherwise, throw an error.\n This is useful for contract that want to enforce that calls targeting them were scheduled on the manager,\n with all the verifications that it implies.\n Emit a {OperationExecuted} event."
            },
            "functionSelector": "94c7d7ee",
            "id": 7687,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "consumeScheduledOp",
            "nameLocation": "15585:18:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7682,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "15612:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7687,
                  "src": "15604:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15604:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7684,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "15635:4:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7687,
                  "src": "15620:19:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7683,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15620:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15603:37:31"
            },
            "returnParameters": {
              "id": 7686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15649:0:31"
            },
            "scope": 7708,
            "src": "15576:74:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7688,
              "nodeType": "StructuredDocumentation",
              "src": "15656:64:31",
              "text": " @dev Hashing function for delayed operations."
            },
            "functionSelector": "abd9bd2a",
            "id": 7699,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "hashOperation",
            "nameLocation": "15734:13:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7690,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "15756:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7699,
                  "src": "15748:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15748:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7692,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "15772:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7699,
                  "src": "15764:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15764:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7694,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "15795:4:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7699,
                  "src": "15780:19:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7693,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15780:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15747:53:31"
            },
            "returnParameters": {
              "id": 7698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7697,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7699,
                  "src": "15824:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7696,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15824:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15823:9:31"
            },
            "scope": 7708,
            "src": "15725:108:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7700,
              "nodeType": "StructuredDocumentation",
              "src": "15839:169:31",
              "text": " @dev Changes the authority of a target managed by this manager instance.\n Requirements:\n - the caller must be a global admin"
            },
            "functionSelector": "18ff183c",
            "id": 7707,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateAuthority",
            "nameLocation": "16022:15:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7702,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "16046:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7707,
                  "src": "16038:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16038:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7704,
                  "mutability": "mutable",
                  "name": "newAuthority",
                  "nameLocation": "16062:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7707,
                  "src": "16054:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16054:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16037:38:31"
            },
            "returnParameters": {
              "id": 7706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16084:0:31"
            },
            "scope": 7708,
            "src": "16013:72:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7709,
        "src": "246:15841:31",
        "usedErrors": [
          7384,
          7388,
          7392,
          7396,
          7400,
          7404,
          7406,
          7412,
          7420,
          7424,
          7434,
          7438
        ],
        "usedEvents": [
          7291,
          7298,
          7305,
          7312,
          7325,
          7332,
          7339,
          7346,
          7355,
          7362,
          7371,
          7380
        ]
      }
    ],
    "src": "117:15971:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.21+commit.d9974bed.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-04-14T22:58:14.879Z",
  "devdoc": {
    "events": {
      "OperationCanceled(bytes32,uint32)": {
        "details": "A scheduled operation was canceled."
      },
      "OperationExecuted(bytes32,uint32)": {
        "details": "A scheduled operation was executed."
      },
      "OperationScheduled(bytes32,uint32,uint48,address,address,bytes)": {
        "details": "A delayed operation was scheduled."
      },
      "RoleAdminChanged(uint64,uint64)": {
        "details": "Role acting as admin over a given `roleId` is updated."
      },
      "RoleGrantDelayChanged(uint64,uint32,uint48)": {
        "details": "Grant delay for a given `roleId` will be updated to `delay` when `since` is reached."
      },
      "RoleGranted(uint64,address,uint32,uint48,bool)": {
        "details": "Emitted when `account` is granted `roleId`. NOTE: The meaning of the `since` argument depends on the `newMember` argument. If the role is granted to a new member, the `since` argument indicates when the account becomes a member of the role, otherwise it indicates the execution delay for this account and roleId is updated."
      },
      "RoleGuardianChanged(uint64,uint64)": {
        "details": "Role acting as guardian over a given `roleId` is updated."
      },
      "RoleLabel(uint64,string)": {
        "details": "Informational labelling for a roleId."
      },
      "RoleRevoked(uint64,address)": {
        "details": "Emitted when `account` membership or `roleId` is revoked. Unlike granting, revoking is instantaneous."
      },
      "TargetAdminDelayUpdated(address,uint32,uint48)": {
        "details": "Admin delay for a given `target` will be updated to `delay` when `since` is reached."
      },
      "TargetClosed(address,bool)": {
        "details": "Target mode is updated (true = closed, false = open)."
      },
      "TargetFunctionRoleUpdated(address,bytes4,uint64)": {
        "details": "Role required to invoke `selector` on `target` is updated to `roleId`."
      }
    },
    "kind": "dev",
    "methods": {
      "canCall(address,address,bytes4)": {
        "details": "Check if an address (`caller`) is authorised to call a given function on a given contract directly (with no restriction). Additionally, it returns the delay needed to perform the call indirectly through the {schedule} & {execute} workflow. This function is usually called by the targeted contract to control immediate execution of restricted functions. Therefore we only return true if the call can be performed without any delay. If the call is subject to a previously set delay (not zero), then the function should return false and the caller should schedule the operation for future execution. If `immediate` is true, the delay can be disregarded and the operation can be immediately executed, otherwise the operation can be executed if and only if delay is greater than 0. NOTE: The IAuthority interface does not include the `uint32` delay. This is an extension of that interface that is backward compatible. Some contracts may thus ignore the second return argument. In that case they will fail to identify the indirect workflow, and will consider calls that require a delay to be forbidden. NOTE: This function does not report the permissions of this manager itself. These are defined by the {_canCallSelf} function instead."
      },
      "cancel(address,address,bytes)": {
        "details": "Cancel a scheduled (delayed) operation. Returns the nonce that identifies the previously scheduled operation that is cancelled. Requirements: - the caller must be the proposer, a guardian of the targeted function, or a global admin Emits a {OperationCanceled} event."
      },
      "consumeScheduledOp(address,bytes)": {
        "details": "Consume a scheduled operation targeting the caller. If such an operation exists, mark it as consumed (emit an {OperationExecuted} event and clean the state). Otherwise, throw an error. This is useful for contract that want to enforce that calls targeting them were scheduled on the manager, with all the verifications that it implies. Emit a {OperationExecuted} event."
      },
      "execute(address,bytes)": {
        "details": "Execute a function that is delay restricted, provided it was properly scheduled beforehand, or the execution delay is 0. Returns the nonce that identifies the previously scheduled operation that is executed, or 0 if the operation wasn't previously scheduled (if the caller doesn't have an execution delay). Emits an {OperationExecuted} event only if the call was scheduled and delayed."
      },
      "expiration()": {
        "details": "Expiration delay for scheduled proposals. Defaults to 1 week. IMPORTANT: Avoid overriding the expiration with 0. Otherwise every contract proposal will be expired immediately, disabling any scheduling usage."
      },
      "getAccess(uint64,address)": {
        "details": "Get the access details for a given account for a given role. These details include the timepoint at which membership becomes active, and the delay applied to all operation by this user that requires this permission level. Returns: [0] Timestamp at which the account membership becomes valid. 0 means role is not granted. [1] Current execution delay for the account. [2] Pending execution delay for the account. [3] Timestamp at which the pending execution delay will become active. 0 means no delay update is scheduled."
      },
      "getNonce(bytes32)": {
        "details": "Return the nonce for the latest scheduled operation with a given id. Returns 0 if the operation has never been scheduled."
      },
      "getRoleAdmin(uint64)": {
        "details": "Get the id of the role that acts as an admin for the given role. The admin permission is required to grant the role, revoke the role and update the execution delay to execute an operation that is restricted to this role."
      },
      "getRoleGrantDelay(uint64)": {
        "details": "Get the role current grant delay. Its value may change at any point without an event emitted following a call to {setGrantDelay}. Changes to this value, including effect timepoint are notified in advance by the {RoleGrantDelayChanged} event."
      },
      "getRoleGuardian(uint64)": {
        "details": "Get the role that acts as a guardian for a given role. The guardian permission allows canceling operations that have been scheduled under the role."
      },
      "getSchedule(bytes32)": {
        "details": "Return the timepoint at which a scheduled operation will be ready for execution. This returns 0 if the operation is not yet scheduled, has expired, was executed, or was canceled."
      },
      "getTargetAdminDelay(address)": {
        "details": "Get the admin delay for a target contract. Changes to contract configuration are subject to this delay."
      },
      "getTargetFunctionRole(address,bytes4)": {
        "details": "Get the role required to call a function."
      },
      "grantRole(uint64,address,uint32)": {
        "details": "Add `account` to `roleId`, or change its execution delay. This gives the account the authorization to call any function that is restricted to this role. An optional execution delay (in seconds) can be set. If that delay is non 0, the user is required to schedule any operation that is restricted to members of this role. The user will only be able to execute the operation after the delay has passed, before it has expired. During this period, admin and guardians can cancel the operation (see {cancel}). If the account has already been granted this role, the execution delay will be updated. This update is not immediate and follows the delay rules. For example, if a user currently has a delay of 3 hours, and this is called to reduce that delay to 1 hour, the new delay will take some time to take effect, enforcing that any operation executed in the 3 hours that follows this update was indeed scheduled before this update. Requirements: - the caller must be an admin for the role (see {getRoleAdmin}) - granted role must not be the `PUBLIC_ROLE` Emits a {RoleGranted} event."
      },
      "hasRole(uint64,address)": {
        "details": "Check if a given account currently has the permission level corresponding to a given role. Note that this permission might be associated with an execution delay. {getAccess} can provide more details."
      },
      "hashOperation(address,address,bytes)": {
        "details": "Hashing function for delayed operations."
      },
      "isTargetClosed(address)": {
        "details": "Get whether the contract is closed disabling any access. Otherwise role permissions are applied."
      },
      "labelRole(uint64,string)": {
        "details": "Give a label to a role, for improved role discoverability by UIs. Requirements: - the caller must be a global admin Emits a {RoleLabel} event."
      },
      "minSetback()": {
        "details": "Minimum setback for all delay updates, with the exception of execution delays. It can be increased without setback (and reset via {revokeRole} in the case event of an accidental increase). Defaults to 5 days."
      },
      "renounceRole(uint64,address)": {
        "details": "Renounce role permissions for the calling account with immediate effect. If the sender is not in the role this call has no effect. Requirements: - the caller must be `callerConfirmation`. Emits a {RoleRevoked} event if the account had the role."
      },
      "revokeRole(uint64,address)": {
        "details": "Remove an account from a role, with immediate effect. If the account does not have the role, this call has no effect. Requirements: - the caller must be an admin for the role (see {getRoleAdmin}) - revoked role must not be the `PUBLIC_ROLE` Emits a {RoleRevoked} event if the account had the role."
      },
      "schedule(address,bytes,uint48)": {
        "details": "Schedule a delayed operation for future execution, and return the operation identifier. It is possible to choose the timestamp at which the operation becomes executable as long as it satisfies the execution delays required for the caller. The special value zero will automatically set the earliest possible time. Returns the `operationId` that was scheduled. Since this value is a hash of the parameters, it can reoccur when the same parameters are used; if this is relevant, the returned `nonce` can be used to uniquely identify this scheduled operation from other occurrences of the same `operationId` in invocations of {execute} and {cancel}. Emits a {OperationScheduled} event. NOTE: It is not possible to concurrently schedule more than one operation with the same `target` and `data`. If this is necessary, a random byte can be appended to `data` to act as a salt that will be ignored by the target contract if it is using standard Solidity ABI encoding."
      },
      "setGrantDelay(uint64,uint32)": {
        "details": "Update the delay for granting a `roleId`. Requirements: - the caller must be a global admin Emits a {RoleGrantDelayChanged} event."
      },
      "setRoleAdmin(uint64,uint64)": {
        "details": "Change admin role for a given role. Requirements: - the caller must be a global admin Emits a {RoleAdminChanged} event"
      },
      "setRoleGuardian(uint64,uint64)": {
        "details": "Change guardian role for a given role. Requirements: - the caller must be a global admin Emits a {RoleGuardianChanged} event"
      },
      "setTargetAdminDelay(address,uint32)": {
        "details": "Set the delay for changing the configuration of a given target contract. Requirements: - the caller must be a global admin Emits a {TargetAdminDelayUpdated} event."
      },
      "setTargetClosed(address,bool)": {
        "details": "Set the closed flag for a contract. Requirements: - the caller must be a global admin Emits a {TargetClosed} event."
      },
      "setTargetFunctionRole(address,bytes4[],uint64)": {
        "details": "Set the role required to call functions identified by the `selectors` in the `target` contract. Requirements: - the caller must be a global admin Emits a {TargetFunctionRoleUpdated} event per selector."
      },
      "updateAuthority(address,address)": {
        "details": "Changes the authority of a target managed by this manager instance. Requirements: - the caller must be a global admin"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}